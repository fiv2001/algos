struct vertex {
    ll to[maxc];
    ll suf = -1, p = -1;
    vertex() {
        ll q;
        for (q = 0; q < maxc; q++) {
            to[q] = -1;
        }
    }
};

struct pistol {
    vector <vertex> V;
    ll last = 0;
    pistol() {
        V.reserve(maxn);
        V.resize(1);
    }
    void add(ll c) {
        ll q;
        vertex nw;
        V.pb(nw);
        ll i = last;
        V.back().p = last;
        last = V.size() - 1;
        ll a, b;
        while (1) {
            if (V[i].to[c] != -1) {
                a = i;
                b = V[i].to[c];
                break;
            }
            V[i].to[c] = V.size() - 1;
            if (V[i].suf == -1) {
                V.back().suf = 0;
                return;
            }
            i = V[i].suf;
        }
        if (V[b].p == a) {
            V.back().suf = b;
            return;
        }
        V.back().p = a;
        ll d = V.size();
        V.back().suf = d;
        V.pb(nw);
        i = a;
        while (i != -1) {
            if (V[i].to[c] != b) {
                break;
            }
            V[i].to[c] = d;
            i = V[i].suf;
        }
        for (q = 0; q < maxc; q++) {
            V[d].to[q] = V[b].to[q];
        }
        V[d].p = a;
        V[d].suf = V[b].suf;
        V[b].suf = d;
    }
};
